:root {
    --color-bg: #fdfaf7;
    --color-primary: #4c4c4c;
    --color-header: #333333;
    --color-accent: #f7745d;
    --color-selection: #f7745d33;
    --custom-ease-out: cubic-bezier(0.22, 0.61, 0.36, 1);
}

@font-face {
	font-family: 'Readex Pro';
	src: url(assets/fonts/ReadexPro.ttf) format("truetype-variations");
}

@font-face {
	font-family: 'Overpass Mono';
	src: url(assets/fonts/OverpassMono-SemiBold.ttf) format("truetype-variations");
}





/*** Reset ***/

/* The new CSS Reset - version 1.2.0 (last updated 23.7.2021). */

/* Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property. */
*:where(:not(iframe, canvas, img, svg, video):not(svg *)) {
    all: unset;
    display: revert;
    color: var(--color-primary);
    font-family: 'Readex Pro', sans-serif;
    font-variation-settings: 'wght' 300;
    font-feature-settings: 'ss03' 1;
    font-size: 14.5px;
    line-height: 1.86;
    letter-spacing: 0.013em;
}

/* Preferred box-sizing value. */
*,
*::before,
*::after {
    box-sizing: border-box;
}

/* Remove list styles (bullets/numbers). */
ol, ul {
    list-style: none;
}

/* For images to not be able to exceed their container. */
img {
    max-width: 100%;
}

/* Removes spacing between cells in tables. */
table {
    border-collapse: collapse;
}

/* Revert the 'white-space' property for textarea elements on Safari. */
textarea {
    white-space: revert;
}

span {
    all: unset;
}





::selection {
    background-color: var(--color-selection);
}

body {
    background-color: var(--color-bg);
}

em {
    font-style: italic;
}

a {
    cursor: pointer;
    border-bottom: 1.8px solid var(--color-primary);
    transition: all 0.4s var(--custom-ease-out);
}

a:hover {
    color: var(--color-accent);
    border-color: var(--color-accent);
    transition-duration: 0s;
}

.container {
    min-width: 600px;
}

.no-user-select {
    user-select: none;
}

.user-select-all {
    user-select: all;
}

/* Use `padding` to give a minimum height. */
.landing-header {
    --v-padding: 300px;
    height: calc(100vh - 56px);
    padding-top: var(--v-padding);
    padding-bottom: var(--v-padding);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.ciao {
    font-size: 44px;
    letter-spacing: 0em;
    font-feature-settings: 'ss01' 1, 'ss03' 1;
    margin-bottom: 80px;
    user-select: none;
    white-space: pre-wrap;
}

.contacts {
    --v-margin: 17px;
    display: flex;
    justify-content: center;
    margin-top: var(--v-margin);
    margin-bottom: var(--v-margin);
}

.contacts-divider {
    --h-margin: 8px;
    margin-left: var(--h-margin);
    margin-right: var(--h-margin);
    user-select: none;
}





/*** Portfolio entries list. ***/

/* Can't use `gap` because I need to add a few elements at the end of the list 
   and they should have no height. They are used to align the visible entries
   of the last row to the left in case that row is not full.
   This method will make additional unwanted margin at the bottom, but this
   ok because there'll be other content after that, and this content will
   include this margin when doing its layout. */

.p-e-list {
    --gap: 56px;
    --element-width: 634px;
    --color-item-background: #ede8e3;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    margin-left: calc(var(--gap) / 2);
    margin-right: calc(var(--gap) / 2);
}

.p-e-l-e-link {
    position: relative;
    width: var(--element-width);
    height: 432px;
    background-color: var(--color-item-background);
    border: unset;
    margin-bottom: var(--gap);
    margin-left: calc(var(--gap) / 2);
    margin-right: calc(var(--gap) / 2);
}

.p-e-l-e-header-container {
    position: absolute;
    left: 0;
    top: 85px;
    width: 100%;
    display: flex;
    justify-content: center;
}

.defs-only {
    position: absolute;
    height: 0;
    width: 0;
    overflow: none;
    left: -100%;
}

.p-e-l-e-image {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-size: cover;
    background-position: center;
}

.p-e-l-e-image-overlay {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: var(--color-item-background);
    opacity: 0;
    transition: all 0.3s var(--custom-ease-out);
}

.p-e-l-e-link:hover .p-e-l-e-image-overlay {
    opacity: 1;
}

.p-e-adjustment {
    position: relative;
    width: var(--element-width);
    margin-left: calc(var(--gap) / 2);
    margin-right: calc(var(--gap) / 2);
}





/*** Portfolio entry header. ***/

.p-e-header {
    width: 430px;
}

.p-e-header-tags-list {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: 5px;
    margin-bottom: 22px;
}

.tag {
    --letter-spacing: 0.22em;
    --v-padding: 4px;
    --h-padding: 11px;
    background-color: var(--color-primary);
    color: var(--color-bg);
    font-size: 10.2px;
    text-transform: uppercase;
    letter-spacing: var(--letter-spacing);
    font-variation-settings: 'wght' 360;
    padding: var(--v-padding) calc(var(--h-padding) - var(--letter-spacing)) var(--v-padding) var(--h-padding);
}

.p-e-header-title {
    font-family: 'Overpass Mono', monospace;
    font-size: 18px;
    letter-spacing: unset;
    line-height: 1.7em;
}




/*** Portfolio entry page ***/

.p-e-layout {
    position: relative;
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.p-e-layout-spacer-above-title {
    height: 240px;
}

.p-e-layout-spacer-below-title {
    height: 180px;
}

.p-e-content {
    --content-width: 770px;
    --content-margin: 20px;
    --divider: 54px;
    position: relative;
    width: 100%;
    display: flex;
    flex-direction: column;
}

.date-divider {
    --margin: 6px;
    user-select: none;
    margin-left: var(--margin);
    margin-right: var(--margin);
}

.p-e-content > p {
    margin-left: max(var(--content-margin), calc((100% - var(--content-width)) / 2));
    margin-right: max(var(--content-margin), calc((100% - var(--content-width)) / 2));
}

.p-e-content > img {
    max-width: min(calc(100% - var(--content-margin) * 2), var(--content-width));
    align-self: center;
}

.p-e-content > *:where(img):not(:last-child) {
    margin-bottom: var(--divider);
}

.p-e-content > *:where(p + img):not(:first-child) {
    margin-top: var(--divider);
}





/*** Nav bar ***/

.nav {
    margin-top: 150px;
    margin-bottom: 230px;
    display: flex;
    gap: 34px;
    justify-content: center;
}

.nav-button {
    --h-padding: 18px;
    padding: 11px var(--h-padding) 13px var(--h-padding);
    border: unset;
    color: var(--color-accent);
}

.nav-button:hover {
    background-color: var(--color-accent);
    color: var(--color-bg);
}